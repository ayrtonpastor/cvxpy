name: build

on:
    pull_request:
    push:
        branches:
            - master
        tags:
          - '*'
jobs:
  cleanup-runs:
    runs-on: ubuntu-latest
    steps:
    - uses: rokroskar/workflow-run-cleanup-action@master
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
    if: "!startsWith(github.ref, 'refs/tags/') && github.ref != 'refs/heads/master'"

  build:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-20.04 ]
        include:
          - os: ubuntu-20.04
            python-version: 3.8
            single_action_config: "True"

    env:
      RUNNER_OS: ${{ matrix.os }}
      PYTHON_VERSION: ${{ matrix.python-version }}
      SINGLE_ACTION_CONFIG: "${{ matrix.single_action_config == 'True' && 'True' || 'False' }}"
      USE_OPENMP: "${{ matrix.openmp == 'True' && 'True' || 'False' }}"
      MOSEK_CI_BASE64: ${{ secrets.MOSEK_CI_BASE64 }}

    steps:
      - uses: actions/checkout@v2
      - name: Set Additional Envs
        run: |
          echo "PYTHON_SUBVERSION=$(echo $PYTHON_VERSION | cut -c 3-)" >> $GITHUB_ENV
          echo $MOSEK_CI_BASE64 | base64 -d > mosek.lic
          echo "MOSEKLM_LICENSE_FILE=$( [[ $RUNNER_OS == 'macOS' ]] && echo $(pwd)/mosek.lic || echo $(realpath mosek.lic) )" >> $GITHUB_ENV
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          channels: conda-forge,anaconda

      - name: Install
        run: |
          source continuous_integration/install_dependencies.sh

      - name: Test
        run: |
          source continuous_integration/test_script.sh

      - name: Upload coverage file
        uses: actions/upload-artifact@v2
        if: ${{env.SINGLE_ACTION_CONFIG == 'True'}}
        with:
          name: coverage
          path: coverage.xml

  sonarcloud:
    needs: build
    name: SonarCloud
    runs-on: ubuntu-latest
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - uses: actions/download-artifact@v2
        with:
          name: coverage
      - name: Check if environment variable exists
        run: |
          echo "RUN_SONAR=$( [[ -n "$SONAR_TOKEN" ]] && echo 'True' || echo 'False' )" >> $GITHUB_ENV
      - name: SonarCloud Scan
        if: ${{env.RUN_SONAR == 'True'}}
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
